{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/Header/Header.js","components/Footer/Footer.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/CreateNote/CreateNote.js","screens/SingleNote/SingleNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","store.js","reducers/userReducers.js","reducers/notesReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","Navbar","bg","expand","variant","Container","Brand","to","Toggle","Collapse","id","Nav","className","Form","FormControl","placeholder","onChange","e","target","value","Link","href","NavDropdown","title","Item","Divider","onClick","removeItem","push","Footer","style","backgroundColor","color","width","position","bottom","display","justifyContent","Row","Col","LandingPage","useEffect","getItem","Button","size","MainScreen","children","NOTE_LIST_REQUEST","NOTE_LIST_SUCCESS","NOTE_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","Authorization","token","delete","Loading","alignContent","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","error","notes","successCreate","noteCreate","success","successUpdate","noteUpdate","noteDelete","loadingDelete","errorDelete","successDelete","get","marginLeft","marginBottom","reverse","filter","fNote","toLowerCase","includes","map","note","Accordion","Card","margin","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","LoginScreen","useState","setEmail","setPassword","handleSubmit","preventDefault","onSubmit","Group","controlId","Label","Control","RegisterScreen","setName","confirmPassword","setConfirmPassword","setPic","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","console","log","url","toString","catch","err","postDetails","files","label","custom","CreateNote","setTitle","setContent","setCategory","resetHandler","createNoteAction","rows","Date","toLocaleDateString","SingleNote","match","date","setDate","params","updatedAt","fetching","put","updateNoteAction","ProfileScreen","userUpdate","md","user","varient","alignItems","src","alt","App","exact","path","component","reducer","combineReducers","action","initialState","parse","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2455ac9.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGIN_LOGOUT = \"USER_LOGIN_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGIN_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, pic, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { logout } from \"../../actions/userActions\";\r\n\r\nconst Header = ({ setSearch }) => {\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <Link to=\"/\">Notes App</Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n        <Navbar.Collapse id=\"navbarScroll\">\r\n          <Nav className=\"m-auto\">\r\n            <Form className=\"d-flex\">\r\n              <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                className=\"mr-2\"\r\n                aria-label=\"Search\"\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </Form>\r\n          </Nav>\r\n          <Nav>\r\n            {userInfo ? (\r\n              <>\r\n                <Nav.Link href=\"/mynotes\">My Notes</Nav.Link>\r\n                <NavDropdown\r\n                  title={userInfo?.name}\r\n                  id=\"navbarScrollingDropdown\"\r\n                >\r\n                  <NavDropdown.Item href=\"/profile\">\r\n                    My Profile\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item onClick={handleLogout}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </>\r\n            ) : (\r\n              <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      style={{\r\n        backgroundColor: \"grey\",\r\n        color: \"white\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        bottom: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">\r\n            Copyright &copy; Notes App 2021\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./LandingPage.css\";\r\n\r\nconst LandingPage = () => {\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const userInfo = localStorage.getItem(\"userInfo\");\r\n    if (userInfo) {\r\n      history.push(\"/myNotes\");\r\n    }\r\n  }, [history]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intor-text\">\r\n            <div>\r\n              <h1 className=\"title\">Welcome To My Notes App</h1>\r\n              <h4 className=\"subtitle\">One Safe Place for all your Notes...</h4>\r\n            </div>\r\n            <div className=\"buttonContainer\">\r\n              <Link to=\"/login\">\r\n                <Button size=\"lg\" className=\"landingbotton\">\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button\r\n                  size=\"lg\"\r\n                  className=\"landingbotton\"\r\n                  variant=\"outline-primary\"\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./MainScreen.css\";\r\n\r\nconst MainScreen = ({ title, children }) => {\r\n  return (\r\n    <div className=\"mainBack\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n                <hr />\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","export const NOTE_LIST_REQUEST = \"NOTE_LIST_REQUEST\";\r\nexport const NOTE_LIST_SUCCESS = \"NOTE_LIST_SUCCESS\";\r\nexport const NOTE_LIST_FAIL = \"NOTE_LIST_FAIL\";\r\n\r\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\r\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\r\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\r\n\r\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\r\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\r\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\r\n\r\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\r\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\r\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\r\n","import axios from \"axios\";\r\nimport {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n} from \"../constants/notesConstants\";\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTE_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/notes`, config);\r\n\r\n    dispatch({\r\n      type: NOTE_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.response;\r\n    dispatch({\r\n      type: NOTE_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNoteAction =\r\n  (title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_CREATE_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        `api/notes/create`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: NOTES_CREATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response;\r\n\r\n      dispatch({\r\n        type: NOTES_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const updateNoteAction =\r\n  (id, title, content, category) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: NOTES_UPDATE_REQUEST,\r\n      });\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        `/api/notes/${id}`,\r\n        { title, content, category },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: NOTES_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response;\r\n\r\n      dispatch({\r\n        type: NOTES_UPDATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loading = ({ size = 100 }) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Spinner style={{ width: size, height: size }} animation=\"border\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({ variant = \"info\", children }) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst MyNotes = ({ search }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, error, notes } = noteList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: successCreate } = noteCreate;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [\r\n    dispatch,\r\n    successCreate,\r\n    history,\r\n    userInfo,\r\n    successUpdate,\r\n    successDelete,\r\n  ]);\r\n\r\n  return (\r\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}...`}>\r\n      <Link to=\"/createnote\">\r\n        <Button style={{ marginLeft: \"10px\", marginBottom: \"6\" }} size=\"lg\">\r\n          Create New Notes\r\n        </Button>\r\n      </Link>\r\n      {errorDelete && (\r\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n      )}\r\n      {loadingDelete && <Loading />}\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {loading && <Loading />}\r\n      {notes\r\n        ?.reverse()\r\n        .filter((fNote) =>\r\n          fNote.title.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n        .map((note) => (\r\n          <Accordion key={note._id}>\r\n            <Card style={{ margin: 10 }}>\r\n              <Card.Header style={{ display: \"flex\" }}>\r\n                <span\r\n                  style={{\r\n                    color: \"black\",\r\n                    textDecoration: \"none\",\r\n                    flex: 1,\r\n                    cursor: \"pointer\",\r\n                    alignSelf: \"center\",\r\n                    fontSize: 18,\r\n                  }}\r\n                >\r\n                  <Accordion.Toggle as={Card.Text} variant=\"link\" eventKey=\"0\">\r\n                    {note.title}\r\n                  </Accordion.Toggle>\r\n                </span>\r\n                <div>\r\n                  <Button href={`/notes/${note._id}`}>Edit</Button>\r\n                  <Button\r\n                    className=\"mx-2\"\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDelete(note._id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </Card.Header>\r\n              <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                  <h4>\r\n                    <Badge variant=\"success\">Category - {note.category}</Badge>\r\n                  </h4>\r\n                  <blockquote className=\"blockquote mb-0\">\r\n                    <p>{note.content}</p>\r\n                    <footer className=\"blockquote-footer\">\r\n                      Created on{\" \"}\r\n                      <cite title=\"Source Title\">\r\n                        {note.createdAt.substring(0, 10)}\r\n                      </cite>\r\n                    </footer>\r\n                  </blockquote>\r\n                </Card.Body>\r\n              </Accordion.Collapse>\r\n            </Card>\r\n          </Accordion>\r\n        ))}\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default MyNotes;\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { login } from \"../../actions/userActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./LoginScreen.css\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/mynotes\");\r\n    }\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Login here...\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPAssword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New User ?\r\n            <Link style={{ color: \"blue\" }} to=\"/register\">\r\n              Register here\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { register } from \"../../actions/userActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\n\r\nconst RegisterScreen = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [pic, setPic] = useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  );\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/mynotes\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Password do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password, pic));\r\n    }\r\n  };\r\n\r\n  const postDetails = (pics) => {\r\n    if (\r\n      pics ===\r\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n    ) {\r\n      return setPicMessage(\"Please select an Image\");\r\n    }\r\n    setPicMessage(null);\r\n\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"mynotes\");\r\n      data.append(\"cloud_name\", \"mynotes\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/mynotes/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"REGISTER here...\">\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n      {loading && <Loading />}\r\n      <div className=\"loginContainer\">\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicCPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n            />\r\n          </Form.Group>\r\n          {picMessage && (\r\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Already Have an Account ?\r\n            <Link style={{ color: \"blue\" }} to=\"/login\">\r\n              Login here\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNoteAction } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction CreateNote({ history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { loading, error } = noteCreate;\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setContent(\"\");\r\n    setCategory(\"\");\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!title || !content || !category) return;\r\n    dispatch(createNoteAction(title, content, category));\r\n\r\n    resetHandler();\r\n    history.push(\"/myNotes\");\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Create a Note\">\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Enter title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                rows={4}\r\n                placeholder=\"Enter Content\"\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Enter Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Fields\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Created on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setCategory(data.category);\r\n      setDate(data.updatedAt);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id, date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNoteAction(match.params.id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Enter the title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"category\"\r\n                placeholder=\"Enter the Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              variant=\"danger\"\r\n              onClick={() => deleteHandler(match.params.id)}\r\n            >\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pic, setPic] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPic(userInfo.pic);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"notezipper\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(pic);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password === confirmPassword) {\r\n      dispatch(updateProfile({ name, email, password, pic }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"EDIT PROFILE\">\r\n      <div>\r\n        <Row className=\"profileContainer\">\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <img src={pic} alt={name} className=\"profilePic\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\nimport CreateNote from \"./screens/CreateNote/CreateNote\";\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\nimport { useState } from \"react\";\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <BrowserRouter>\n      <Header setSearch={setSearch} />\n      <main>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/login\" component={LoginScreen} />\n        <Route path=\"/profile\" component={ProfileScreen} />\n        <Route path=\"/register\" component={RegisterScreen} />\n        <Route path=\"/createnote\" component={CreateNote} />\n        <Route path=\"/notes/:id\" component={SingleNote} />\n        <Route path=\"/mynotes\" component={() => <MyNotes search={search} />} />\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n//Extension for testing redux\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  noteCreateReducer,\r\n  noteDeleteReducer,\r\n  noteListReducer,\r\n  noteUpdateReducer,\r\n} from \"./reducers/notesReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  noteList: noteListReducer,\r\n  noteCreate: noteCreateReducer,\r\n  noteUpdate: noteUpdateReducer,\r\n  noteDelete: noteDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_LOGOUT,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGIN_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n  NOTE_LIST_FAIL,\r\n  NOTE_LIST_REQUEST,\r\n  NOTE_LIST_SUCCESS,\r\n} from \"../constants/notesConstants\";\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTE_LIST_REQUEST:\r\n      return { loading: true };\r\n    case NOTE_LIST_SUCCESS:\r\n      return { loading: false, notes: action.payload };\r\n    case NOTE_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}